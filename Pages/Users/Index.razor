@page "/usuarios"
@attribute [Authorize(Roles = "Administrator,User")]

<MenuDisplay />
<hr>
@if (!ShowForm)
{
    <div class="row mb-2">
        <div class="col">
            <input type="text" @bind="Filtro">
        </div>
        <div class="col">
            <button class="btn btn-outline-primary" @onclick="()=>CargarUsuarios()">
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-search" viewBox="0 0 16 16">
                    <path d="M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z" />
                </svg>
                Buscar
            </button>
            <AuthorizeView Roles="Administrator">
                <Authorized>
                    <button class="btn btn-outline-success" @onclick="Formulario">
                        <span class="oi oi-plus"></span>
                    </button>
                </Authorized>
                <NotAuthorized>
                    <button class="btn btn-outline-danger">No tienes permisos para agregar usuarios.
                    </button>
                </NotAuthorized>
            </AuthorizeView>
        </div>
    </div>
    <hr>
    <h3><b>Usuarios</b> (@Users.Count)</h3>
}
<div class="container">
    @*Cuando se precio el boton Detalles se muestra mas info sobre el item*@
    @if (ShowDetails)
    {
        <h3>Detalles del Usuario</h3>
        @if (SelectedUser != null)
        {
            <div class="card" style="width: 18rem;">
                <div class="card-body">
                    <h5 class="card-title"><b>@SelectedUser.Nombre @SelectedUser.Apellido</b></h5>
                    <p class="card-text">
                        <b>Usuario:</b> @SelectedUser.Email
                        <br>
                        <b>Clave:</b> @SelectedUser.Clave
                        <br>
                        <b>Role:</b> @SelectedUser.Role
                    </p>
                    <button @onclick="()=>Editar(SelectedUser)" class="btn btn-outline-primary">
                        <span class="oi oi-pencil"></span>
                        Editar
                    </button>
                    <button @onclick="Close" class="btn btn-outline-danger">
                        <span class="oi oi-x"></span>
                        Close
                    </button>
                </div>
            </div>
        }
        else
        {
            <p>No se ha seleccionado ningún empleado.</p>
        }
    }

    @if (ShowForm)
    {
        <div class="card">
            <div class="card-body">
                <h3 class="card-title"><b>@TituloForm</b></h3>
                <hr>
                <EditForm Model="request" OnValidSubmit="Send">
                    <div class="mb-3 input-group">
                        <label for="Nombre" class="input-group-text">Nombre</label>
                        <InputText id="Nombre" class="form-control" @bind-Value="@request.Nombre" />
                    </div>
                    <div class="mb-3 input-group">
                        <label for="Apellido" class="input-group-text">Apellido</label>
                        <InputText id="Apellido" class="form-control" @bind-Value="@request.Apellido" />
                    </div>
                    <div class="mb-3 input-group">
                        <label for="Usuario" class="input-group-text">Usuario</label>
                        <InputText id="Usuario" class="form-control" @bind-Value="@request.Email" />
                    </div>
                    <div class="mb-3 input-group">
                        <label for="Clave" class="input-group-text">Clave</label>
                        <InputText id="Clave" type="password" class="form-control" @bind-Value="@request.Clave" />
                    </div>
                    <div class="mb-3 input-group">
                        <label for="ConfirmarClave" class="input-group-text">Confirmar Clave</label>
                        <InputText id="ConfirmarClave" type="password" class="form-control" @bind-Value="@confirmarClave" />
                    </div>
                    <!-- Add select for Administrator and User roles -->
                    <div class="mb-3 input-group">
                        <label class="input-group-text" for="chkAdministrator">Role</label>
                        <select name="" id="role" class="form-control" @bind="@request.Role">
                            <option disabled>Seleccione un Role</option>
                            <option value="Administrator">Administrator</option>
                            <option value="User">User</option>
                        </select>
                    </div>

                    <div class="d-grid gap-2">
                        <button type="submit" class="btn btn-outline-primary">Guardar</button>
                        <button @onclick="Cancelar" class="btn btn-outline-secondary">Cancelar</button>
                    </div>
                </EditForm>
            </div>
        </div>
    }
    else
    {
        <table class="table">
            <thead>
                <tr>
                    <th>Nombre</th>
                    <th>Apellido</th>
                    <th>Correo</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Users)
                {
                    <tr>
                        <td>@item.Nombre</td>
                        <td>@item.Apellido</td>
                        <td>@item.Email</td>
                        <td>
                            <AuthorizeView Roles="Administrator">
                                <Authorized>
                                    <button @onclick="()=>MostrarDetalles(item.Id)" 
                                        class="btn btn-outline-primary">
                                        <span class="oi oi-info"></span>
                                        Detalles
                                    </button>
                                    <button @onclick="()=>Seleccionar(item.Id)"
                                        class="btn btn-outline-primary">
                                        <span class="oi oi-pencil"></span>
                                        Editar
                                    </button>
                                    <button @onclick="()=>Eliminar(item)"
                                        class="btn btn-outline-danger">
                                        <span class="oi oi-trash"></span>
                                        Borrar
                                    </button>
                                </Authorized>
                                <NotAuthorized>
                                    <button class="btn btn-outline-danger">
                                        No tienes permisos para realizar esta accion.
                                    </button>
                                </NotAuthorized>
                            </AuthorizeView>
                        </td>
                    </tr>   
                }
            </tbody>
        </table>
                
    }
</div>
@code {
    public string TituloForm => request.Id == 0 ?
    "Agregar usuario" : "Modificar usuario";

    public bool ShowForm { get; set; } = false;
    public bool ShowDetails { get; set; } = false;
    public string Filtro { get; set; } = "";
    public List<UserResponse> Users { get; set; }
        = new List<UserResponse>();
    public UserResponse? SelectedUser { get; set; }
    public UserRequest request { get; set; } = new UserRequest();
    public string ErrorMessage { get; set; } = "";
    // Add these properties to track the checkbox states and set the Role property accordingly
    private bool IsAdministrator { get; set; }
    private bool IsUser { get; set; }
    public string confirmarClave { get; set; } = "";

    private void SetRole()
    {
        if (IsAdministrator)
        {
            request.Role = "Administrator";
            IsUser = false; // Uncheck the User checkbox
        }
        else if (IsUser)
        {
            request.Role = "User";
            IsAdministrator = false; // Uncheck the Administrator checkbox
        }
    }

    protected override async Task OnInitializedAsync()
    {
        await CargarUsuarios();
    }

    void Cancelar()
    {
        // Clear checkbox states and other fields
        IsAdministrator = false;
        IsUser = false;
        request = new UserRequest();
        ShowForm = false;
        // Recargar la página actual
        urlHelper.NavigateTo(urlHelper.Uri, forceLoad: true);
    }
    async Task CargarUsuarios()
    {
        var resultado =
        await userServices.Consultar(Filtro);
        if (resultado.Exitoso)
        {
            Users = resultado.Datos!;
        }
    }
    void Close()
    {
        ShowDetails = false;
    }
    public async Task MostrarDetalles(int userId)
    {
        ShowForm = false;
        ShowDetails = true;
        SelectedUser = Users.FirstOrDefault(u => u.Id == userId);
    }
    public void Editar(UserResponse user)
    {
        ShowForm = true;
        ShowDetails = false;
        request = new UserRequest
            {
                Id = user.Id,
                Nombre = user.Nombre,
                Apellido = user.Apellido,
                Email = user.Email,
                Clave = user.Clave
            };
    }
    public async Task Send()
    {
        if (request.Id == 0)
        {
            if (request.Clave != confirmarClave)
            {
                // Mostrar mensaje de error porque las claves no coinciden
                ErrorMessage = "Las claves no concuerdan";
                return;
            }
            //Debo registrar el contacto..
            var r = await userServices.Crear(request);
            if (r.Exitoso)
            {
                SetRole();
                Cancelar();
                await CargarUsuarios();
                StateHasChanged();
            }
        }
        else
        {
            if (request.Clave != confirmarClave)
            {
                // Mostrar mensaje de error porque las claves no coinciden
                ErrorMessage = "Las claves no concuerdan";
                return;
            }
            //Debo solicitar modificar el contacto...
            var r = await userServices.Modificar(request);
            if (r.Exitoso)
            {
                Cancelar();
                await CargarUsuarios();
                StateHasChanged();
            }
        }
    }

    public async Task Eliminar(UserResponse user)
    {
        var resultado = await userServices.Eliminar(user.ToRequest());
        if (resultado.Exitoso)
        {
            await CargarUsuarios();
            StateHasChanged();
        }
    }

    public void Seleccionar(int Id)
    {
        ShowForm = true;
        ShowDetails = false;
        request = Users
        .Where(c => c.Id == Id)
        .Select(c => c.ToRequest())
        .FirstOrDefault() ?? new UserRequest();
    }
    void Formulario()
    {
        urlHelper.NavigateTo("add/user");
    }
}