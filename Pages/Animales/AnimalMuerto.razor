@page "/animal/perdido"
@attribute [Authorize]
@inject IJSRuntime JSRuntime;

<style>
    .table thead {
        background-color: black;
        color: rgb(223, 223, 223);
    }
</style>
<script>
    function printPage() {
        window.print();
    }
</script>

<PageTitle>Perdidas</PageTitle>

@if (!ShowForm)
{
    <div class="row mb-2 d-print-none">
        <div class="col">
            <input type="text" placeholder="Arete ó Raza" @bind="Filtro">
        </div>
        <div class="col">
            <button class="btn btn-outline-primary" @onclick="()=>CargarInfo()">
                <span class="oi oi-magnifying-glass"></span>
                Buscar
            </button>
            <button class="btn btn-outline-primary d-print-none" @onclick="PrintPageAsync">
                <span class="oi oi-print"></span>
            </button>
        </div>
    </div>
    <hr>
    <h3><b>Bovinos</b> (@Animales.Count())</h3>
}

<div class="container">
    @if (!ShowForm)
    {
        <h5><b>Perdidas en bovinos</b> (@Animales.Sum(c => c.CostoCompra).ToString("C2"))</h5>
    }
    @if (ShowForm)
    {
        <div class="card">
        <div class="card-body">
            <h3 class="card-title"><b>@TituloForm</b></h3>
            <hr>

            <EditForm Model="request" OnValidSubmit="Send">
                <DataAnnotationsValidator />
                <ValidationSummary />
                <div class="mb-3 input-group">
                    <label for="Arete" class="input-group-text">Arete</label>
                    <InputText id="Arete" class="form-control" @bind-Value="@request.Arete" />
                </div>
                <div class="mb-3 input-group">
                    <label for="Raza" class="input-group-text">Raza</label>
                    <input 
                        class="form-control"
                        placeholder="Raza"
                        aria-label="Raza"
                        aria-describedby="button-addon2" list="contactos"
                        @bind="@request.Raza"
                    />
                    <datalist id="contactos">
                        @foreach (var cliente in Razas)
                        {
                            <option value="@cliente.Nombre"  />
                        }
                    </datalist>
                </div>
                <div class="mb-3 input-group">
                    <label for="Sexo" class="input-group-text">Sexo</label>
                    <select id="Sexo" class="form-control" @bind="@request.Sexo">
                        <option value="" disabled>Selecciona un sexo</option>
                        <option value="Macho">Macho</option>
                        <option value="Hembra">Hembra</option>
                    </select>
                </div>
                <div class="mb-3 input-group">
                    <label for="CostoCompra" class="input-group-text">Costo/Compra</label>
                    <InputNumber id="CostoCompra" class="form-control" @bind-Value="@request.CostoCompra" />
                </div>
                <div class="mb-3 input-group">
                    <label for="FechaNacimiento" class="input-group-text">Fecha/Nacimiento</label>
                    <InputDate id="FechaNacimiento" class="form-control" @bind-Value="@request.FechaNacimiento" />
                </div>
                <div class="mb-3 input-group">
                    <label for="FechaNacimiento" class="input-group-text">Fecha/Muerte</label>
                    <InputDate id="FechaNacimiento" class="form-control" @bind-Value="@request.FechaMuerte" />
                </div>
                
                <div class="d-grid gap-2">
                    <button type="submit" class="btn btn-outline-primary">Guardar</button>
                    <button @onclick="Cancelar" class="btn btn-outline-secondary">Cancelar</button>
                </div>
            </EditForm>
        </div>
        </div>
    }
    else
    {
        @if (MostrarConfirmacio)
        {
            <div class="modal" tabindex="-1" role="dialog" style="display: block; background-color: rgba(0, 0, 0, 0.5);">
                <div class="modal-dialog" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title">¿Estas seguro?</h5>
                        </div>
                        <div class="modal-footer">
                            <button class="btn btn-outline-success"
                                @onclick="ConfirmarPerdido" >
                                <span class="oi oi-check"></span> Sí
                            </button>
                            <button class="btn btn-outline-danger"
                                @onclick="CancelarConfirmacion">
                                <span class="oi oi-x"></span> No
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        }
        <table class="table table-striped">
            <thead>
                <tr>
                    <th>Arete</th>
                    <th>Raza</th>
                    <th>Sexo</th>
                    <th>Costo/Compra</th>
                    <th>Fecha/Nacimiento</th>
                    <th>Fecha/Muerte</th>
                    <th>...</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Animales)
                {
                     <tr>
                        <td>@item.Arete</td>
                        <td>@item.Raza</td>
                        <td>@item.Sexo</td>
                        <td>@item.CostoCompra.ToString("C2")</td>
                        <td>@item.FechaNacimiento.ToShortDateString()</td>
                        <td>@item.FechaMuerte.ToShortDateString()</td>
                        <td>
                            <AuthorizeView Roles="Administrator">
                                <Authorized>
                                    <div class="button d-print-none">
                                        <button @onclick="()=>MostrarConfirmacion(item)"
                                            class="btn btn-outline-dark">
                                            <span class="oi oi-thumb-up"></span>
                                            Encontrado
                                        </button>
                                        <button @onclick="()=>Seleccionar(item.Id)"
                                            class="btn btn-outline-primary">
                                            <span class="oi oi-pencil"></span>
                                            Editar
                                        </button>
                                        <button @onclick="()=>Eliminar(item)"
                                            class="btn btn-outline-danger">
                                            <span class="oi oi-trash"></span>
                                            Borrar
                                        </button>
                                    </div>
                                </Authorized>
                                <NotAuthorized>
                                    <button class="btn btn-outline-danger">
                                        Sin Acceso
                                    </button>
                                </NotAuthorized>
                            </AuthorizeView>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
    
</div>    
@code {
    public string TituloForm => request.Id == 0 ?
    "Agregar bovino" : "Modificar bovino";
    
    public bool ShowForm { get; set; } = false;
    public bool MostrarConfirmacio { get; set; } = false;
    public string Filtro { get; set; } = "";
    public List<LostAnimalResponse> Animales { get; set; } = new List<LostAnimalResponse>();
    public List<RazaResponse> Razas { get; set; } = new List<RazaResponse>();
    public LostAnimalResponse SelectCar { get; set; } = new LostAnimalResponse();
    public LostAnimalRequest request { get; set; } = new LostAnimalRequest();
    public LostAnimalResponse AnimalEnConfirmacion { get; set; } = new LostAnimalResponse();
    
    void MostrarConfirmacion(LostAnimalResponse animal)
    {
        MostrarConfirmacio = true;
        AnimalEnConfirmacion = animal;
    }
    void CancelarConfirmacion()
    {
        MostrarConfirmacio = false;
    }
    async Task ConfirmarPerdido()
    {
        // Crear un objeto LostAnimalRequest a partir de AnimalRequest
        var animalRequest = new AnimalRequest
        {
            Id = AnimalEnConfirmacion.Id,
            Arete = AnimalEnConfirmacion.Arete,
            Raza = AnimalEnConfirmacion.Raza,
            Sexo = AnimalEnConfirmacion.Sexo,
            CostoCompra = AnimalEnConfirmacion.CostoCompra,
            FechaNacimiento = AnimalEnConfirmacion.FechaNacimiento
        };

        // Realiza una llamada al servidor para marcar el animal como perdido en la entidad LostAnimal.
        var resultado = await animalServices.Registrar(animalRequest);
        
        if (resultado.Exitoso)
        {
            // Luego, elimina el animal de la entidad Animal.
            var eliminacionExitosa = await lostAnimalServices.Eliminar(AnimalEnConfirmacion.ToRequest());
            
            if (eliminacionExitosa.Exitoso)
            {
                MostrarConfirmacio = false;
                await CargarInfo(); // Actualiza la lista de animales después de los cambios en el servidor.
            }
        }
    }
 
    void Cancelar()
    {
        request = new LostAnimalRequest();
        ShowForm = false;
    }
    async Task CargarInfo()
    {
        var resultado = await lostAnimalServices.Consultar(Filtro);
        if (resultado.Exitoso)
            Animales = resultado.Datos!;
    }
    async Task CargarRaza()
    { 
        //Llenar la lista de contactos para mostrar al usuario...
        var r = await razaServices.Consultar("");
        if (r.Exitoso)
        {
            Razas = r.Datos!;
        }
    }
    protected async override Task OnInitializedAsync()
    {
        await Consultar();
        await CargarRaza();
    }
    public async Task<bool> Consultar()
    {
        var response = await lostAnimalServices.Consultar(Filtro);
        if(response.Exitoso)
            Animales = response.Datos!;
        return true;
    }
    public async Task Eliminar(LostAnimalResponse item)
    {
        var resultado = await lostAnimalServices.Eliminar(item.ToRequest());
        if (resultado.Exitoso)
        {
            await CargarInfo();
            StateHasChanged();
        }
    }
    public void Seleccionar(int Id)
    {
        ShowForm = true;
        var selectedAnimal = Animales.FirstOrDefault(c => c.Id == Id);
        if (selectedAnimal != null)
        {
            request.Id = selectedAnimal.Id;
            request.Arete = selectedAnimal.Arete;
            request.Raza = selectedAnimal.Raza;
            request.Sexo = selectedAnimal.Sexo;
            request.CostoCompra = selectedAnimal.CostoCompra;
            request.FechaNacimiento = selectedAnimal.FechaNacimiento;
            request.FechaMuerte = selectedAnimal.FechaMuerte;
            // Asegúrate de que las propiedades del modelo request se asignen correctamente
        }
    }
    public async Task Send()
    {
        if (request.Id == 0 )
        {
            //Debo registrar el contacto..
            var r = await lostAnimalServices.Crear(request);
            if (r.Exitoso)
            {
                Cancelar();
                await CargarInfo();
                StateHasChanged();
            }
        }
        else
        {
            //Debo solicitar modificar el contacto...
            var r = await lostAnimalServices.Modificar(request);
            if (r.Exitoso)
            {
                Cancelar();
                await CargarInfo();
                StateHasChanged();
            }
        }
    }

    private async Task PrintPageAsync()
    {
        // Llama a la función JavaScript para imprimir la página
        await JSRuntime.InvokeVoidAsync("printPage");
    }
}