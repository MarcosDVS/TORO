@page "/factura/crear"
@using TORO.Data.Request;
@using TORO.Data.Response;
@attribute [Authorize(Roles = "Administrator,User")]

<style>
    .table thead {
        background-color: black;
        color: rgb(223, 223, 223);
    }
</style>

<!-- Agregar el diseño de la página aquí -->
<div class="row mb-3">
    <div class="col-md-3">
        <h3><b>Registro de Factura</b></h3>
    </div>
    <div class="col-md-3">
        <button class="btn btn-outline-danger d-print-none"
            @onclick="Back">
            <span class="oi oi-arrow-left"></span>
        </button>
    </div>
</div>
@if (!string.IsNullOrWhiteSpace(Message))
{
    <div class="alert alert-danger d-print-none" role="alert">@Message</div>
}
<EditForm Model="facturaRequest" OnValidSubmit="Send">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <p><b>Nota:</b> Recuerda un quintal tiene 100 kilos</p>
    <div class="row mb-2">
        <div class="col-md-6 mb-2">
            <div class="input-group">
                <label for="FechaVenta" class="input-group-text"><b>Fecha:</b></label>
                <InputDate @bind-Value="facturaRequest.Fecha" id="Fecha" class="form-control" />
            </div>    
        </div>
        <div class="col-md-6">
            <div class="input-group">
                <label for="Cantidad" class="input-group-text"><b>Cliente:</b></label>
                <InputText @bind-Value="facturaRequest.Cliente" id="Cantidad" class="form-control" />
            </div>
        </div>
    </div>

    <div class="row mb-2">
        <div class="col-md-6">
            <div class="input-group d-print-none">
                <label for="AnimalId" class="input-group-text">Animal:</label>
                <select class="form-control" @bind="IdAnimal">
                    @if (Animales.Any())
                    {
                        <option value="" disabled selected>Selecciona un animal</option>
                        @foreach (var animal in Animales)
                        {
                            @if(!animal.Vendido)
                            {
                                <option value="@animal.Id">
                                    @animal.Arete @animal.Raza @animal.Sexo
                                </option>
                            }
                        }
                    }
                    else
                    {
                        <option value="" disabled selected>No hay animales disponibles</option>
                    }
                </select>
            </div>
        </div>
        <div class="col-md-6">
            <div class="input-group d-print-none">
                <label for="Cantidad" class="input-group-text">Cantidad:</label>
                <InputNumber @bind-Value="detalleFacturaRequest.Cantidad" id="Cantidad" class="form-control" />
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-6">
            <div class="input-group d-print-none">
                <label for="PrecioVenta" class="input-group-text">Precio/quintal:</label>
                <InputNumber @bind-Value="detalleFacturaRequest.PrecioKilo" id="PrecioVenta" class="form-control" />
            </div>
        </div>
        <div class="col-md-6">
            <div class="input-group d-print-none">
                <label for="PrecioVenta" class="input-group-text">Kilos:</label>
                <InputNumber @bind-Value="detalleFacturaRequest.Kilo" id="PrecioVenta" class="form-control" />
            </div>
        </div>
        <div class="col-md-2 mt-2">
            <button class="btn btn-success d-print-none" type="button"
                @onclick="AgregarAlDetalle">
                <span class="oi oi-collapse-down"></span>
            </button>
        </div>
    </div>

    
    @*Disenar los elementos que se cargan a la factura*@
    <h5><b>Detalle de la factura</b></h5>
    <table class="table table-striped">
        <thead>
            <tr>
                <th>
                    Cantidad
                </th>
                <th>Descripcion</th>
                <th>Costo/Quintal</th>
                <th>Kilos</th>
                <th>
                    ITBIS
                </th>
                <th>
                    Costo
                </th>
                <th>
                    ...
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var detalle in facturaRequest.Detalles)
            {
                <tr>
                    <td class="col">
                        @detalle.Cantidad
                    </td>
                    <td class="col w-25">
                        @detalle.Descripcion
                    </td>
                    <td class="col">
                        @detalle.PrecioKilo
                    </td>
                    <td class="col">
                        @detalle.Kilo.ToString("N2")
                    </td>
                    <td>
                        <span style="white-space: nowrap;">
                            @($"{(detalle.Precio * 0.18m):C2}")
                        </span>
                    </td>

                    <td class="col text-center">
                        <InputNumber 
                            class="form-control " 
                            @bind-Value="@detalle.Precio" />
                    </td>
                    <td>
                        <button type="button" class="btn btn-outline-danger d-print-none"
                        @onclick="()=>EliminarDetalle(detalle.AnimalId)">
                        <span class="oi oi-trash"></span>
                    </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <div class="card mb-3 p-3">
        <h5 class="card-header"><b>Resumen</b></h5>
        <div class="card-body">
            @if (Cobro)
            {
                <label for=""><b>ITBIS:</b></label>
                @($"{(facturaRequest.SubTotal * 0.18m):C2}")
                <br>
                <label><b>Total:</b></label>
                @facturaRequest.SubTotal.ToString("C2")
                <div class="mb-3">
                    <button 
                        class="btn btn-success d-print-none" 
                        type="button"
                        @onclick="Cobrar">
                        Cobrar
                    </button>
                </div>
            }
            @if (Pagado)
            {
                <label for=""><b>ITBIS:</b></label>
                @($"{(facturaRequest.SubTotal * 0.18m):C2}")
                <br>
                <label><b>Total:</b></label>
                @facturaRequest.SubTotal.ToString("C2")
                <div class="card mb-3 p-3">
                    <h5 class="card-header"><b>Registro de Pago</b></h5>
                    <div class="card-body">
                        <label for="montoPagado"><b>Monto Pagado:</b></label>
                        <InputNumber @bind-Value="MontoPagado" id="montoPagado" class="form-control" />
                        <div class="mb-3">
                            <button 
                                class="btn btn-danger d-print-none" 
                                type="button"
                                @onclick="CancelarPago">
                                Cancelar
                            </button>
                            <button 
                                class="btn btn-success d-print-none" 
                                type="button"
                                @onclick="CalcularCambio">
                                Calcular
                            </button>
                        </div>
                    </div>
                </div>
            }
            @if (Chance )
            {
                <label for=""><b>ITBIS:</b></label>
                @($"{(facturaRequest.SubTotal * 0.18m):C2}")
                <br>
                <label><b>Total:</b></label>
                @facturaRequest.SubTotal.ToString("C2")
                <div class="card mb-3 p-3">
                    <h5 class="card-header"><b>Cambio</b></h5>
                    <div class="card-body">
                        <label><b>Cambio:</b></label>
                        @Cambio.ToString("C2")
                        <div class="mb-3">
                            <button 
                                class="btn btn-danger d-print-none" 
                                type="button"
                                @onclick="CancelarPago">
                                Cancelar
                            </button>
                            <button 
                                class="btn btn-success d-print-none" 
                                type="submit" @ondblclick="()=>{Cobro=true;}">
                                Guardar
                            </button>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</EditForm>



@code {
    public bool Cobro { get; set; } = true;
    public bool Pagado { get; set; } = false;
    public bool Chance { get; set; } = false;
    public decimal MontoPagado = 0;
    public decimal Cambio = 0;
    public string? Message { get; set; } = null;
    public string Nombre { get; set; } = string.Empty;
    public List<AnimalResponse> Animales { get; set; } = new List<AnimalResponse>();
    private FacturaRequest facturaRequest = new FacturaRequest();
    private FacturaDetalleRequest detalleFacturaRequest = new FacturaDetalleRequest();
    public AnimalResponse AnimalEnConfirmacion { get; set; } = new AnimalResponse();
    public decimal Precio { get; set; } = 0;
    public int Cantidad { get; set; } = 1;
    public int IdAnimal { get; set; } = 0;

   async Task CargarProducto()
    { 
        //Llenar la lista de contactos para mostrar al usuario...
        var r = await animalServices.Consultar("");
        if (r.Exitoso)
        {
            Animales = r.Datos!;
        }
    }

    protected override async Task OnInitializedAsync()
    {
        await CargarProducto();
        
        // Verifica si hay al menos un animal disponible
        if (Animales.Count > 0)
        {
            IdAnimal = Animales[0].Id; // Inicializa con el primer animal en la lista
        }
    }

    void EliminarDetalle(int Id)
    {
        var detalle = facturaRequest.Detalles
            .FirstOrDefault(d => d.AnimalId == Id);

        if (detalle != null)
        {
            // Encuentra el animal correspondiente en la lista Animales
            var animalCorrespondiente = Animales.FirstOrDefault(a => a.Id == detalle.AnimalId);

            if (animalCorrespondiente != null)
            {
                // Actualiza la propiedad Vendido a false
                animalCorrespondiente.Vendido = false;
            }

            facturaRequest.Detalles.Remove(detalle);
        }
    }

    void AgregarAlDetalle()
    {
        var r = Animales?.FirstOrDefault(p => p.Id == IdAnimal);

        if (r != null)
        {
            if (detalleFacturaRequest.Kilo >= 100) // Verifica el precio
            {
                var detalle = facturaRequest.Detalles.FirstOrDefault(d => d.AnimalId == IdAnimal);

                if (detalle != null)
                {
                    detalle.Cantidad += Cantidad;
                }
                else
                {
                    facturaRequest.Detalles.Add(new()
                    {
                        AnimalId = IdAnimal,
                        Descripcion = r!.Arete + " " + r!.Raza + " " + r!.Sexo,
                        Kilo = detalleFacturaRequest.Kilo,
                        PrecioKilo = detalleFacturaRequest.PrecioKilo,
                        Precio = (detalleFacturaRequest.Kilo / 100) * detalleFacturaRequest.PrecioKilo,
                        Cantidad = Cantidad
                    });

                    // Actualizar la propiedad Vendido del animal a true
                    r.Vendido = true;
                }
            }
            else
            {
                Message = "No puedes vender un bovino de menos de 100 kilos";
            }
        }
    }

    async Task Send()
    {
        var result = await facturaServices.Crear(facturaRequest);
        if (result.Exitoso)
        {
            // Obtener los IDs de los animales en la factura
            var animalIds = facturaRequest.Detalles.Select(d => d.AnimalId).ToList();

            // Llamar al servicio para marcar los animales como vendidos
            var actualizacionExitosa = await animalServices.MarcarAnimalesComoVendidos(animalIds);

            if (actualizacionExitosa)
            {
                Message = result.Mensaje;
                // Reset the form after successful save
                //facturaRequest = new FacturaRequest();
                //detalleFacturaRequest = new FacturaDetalleRequest();
                //Pagado = false;
                //Chance = false;
                //Cobro = true;
                //MontoPagado = 0;
                //Cambio = 0;
                urlHelper.NavigateTo("factura", true);
            }
            else
            {
                Message = "Error al marcar los animales como vendidos.";
            }
        }
        else
        {
            Message = result.Mensaje;
        }

    }
    
    void Cobrar()
    {
        Pagado = true;
        Cobro = false;
    }

    void CancelarPago()
    {
        Pagado = false;
        Chance = false;
        Cobro = true;
        MontoPagado = 0;
        Cambio = 0;
    }

    void CalcularCambio()
    {
        Pagado = false;
        Chance = true;
        if (MontoPagado >= facturaRequest.SubTotal)
        {
            Cambio = MontoPagado - facturaRequest.SubTotal;
        }
        else
        {
            Message = "El monto pagado debe ser igual o mayor al total de la factura.";
        }
    }
    void Back()
    {
        urlHelper.NavigateTo("factura",true);
    }
}
