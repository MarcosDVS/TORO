@page "/factura"
@using TORO.Data.Response;

<MenuDisplay />
<hr>

<div class="row">
    <div class="col">
        <h3 class="d-print-none"><b>Módulo de facturación</b></h3>
        <h3 class="d-none d-print-block">Reporte de facturaciones</h3>
    </div>
    <div class="col">
        <button 
            class="btn btn-outline-success" 
            @onclick='CrearFactura'>
            <span class="oi oi-plus"></span>
        </button>
    </div>
</div>
@if (Facturas != null)
{
    <table class="table">
        <thead>
            <tr>
                <th scope="col">#</th>
                <th scope="col">Cliente</th>
                <th scope="col">Monto</th>
                <th scope="col">Fecha</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var f in Facturas)
            {
                <tr>
                    <th scope="row">@f.Id</th>
                    <td>@f.Cliente</td>
                    <td>@f.SubTotal.ToString("N2")</td>
                    <td>@f.Fecha</td>
                    <td>
                        <button class="btn btn-primary">
                            <span class="oi oi-info"></span>
                            Detalles
                        </button>
                        <button @onclick="()=>Eliminar(f)" class="btn btn-danger">
                            <span class="oi oi-trash"></span>
                            Borrar
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code
{
    void CrearFactura()
    {
        urlHelper.NavigateTo("/factura/crear");
    }
    
     async Task Consultar()
    {
        var resultado = await facturaServices.Consultar();
        if (resultado.Exitoso)
        {
            Facturas = resultado.Datos??new List<FacturaRespose>();
        }
        StateHasChanged();
    }
    public List<FacturaRespose> Facturas { get; set; } = new List<FacturaRespose>();
    protected override async Task OnInitializedAsync()
    {
        await Consultar();
    }

    public async Task Eliminar(FacturaRespose user)
    {
        var resultado = await facturaServices.Eliminar(user.ToRequest());
        if (resultado.Exitoso)
        {
            await Consultar();
            StateHasChanged();
        }
    }
}