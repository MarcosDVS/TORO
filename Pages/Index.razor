@page "/"

<br/>
<br/>
<br/>
<div class="container">
    
    <div class="row justify-content-center">
        <div class="card mb-2" style="width:20rem;">
            <br />
            <div style="display: flex; justify-content: center;">
                <svg xmlns="http://www.w3.org/2000/svg" width="60" height="60" fill="currentColor" class="bi bi-person-circle" viewBox="0 0 16 16">
                    <path d="M11 6a3 3 0 1 1-6 0 3 3 0 0 1 6 0z" />
                    <path fill-rule="evenodd" d="M0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8zm8-7a7 7 0 0 0-5.468 11.37C3.242 11.226 4.805 10 8 10s4.757 1.225 5.468 2.37A7 7 0 0 0 8 1z" />
                </svg>
                <br />
            </div>
            <h2 style="display: flex; justify-content: center;">Iniciar Sesión</h2>
            <form>
                <div class="form-group">
                    <label for="username"><b>Nombre de usuario</b></label>
                    <input type="text" class="form-control" @bind="model.UserName">
                </div>
                <div class="form-group mb-3">
                    <label for="password"><b>Contraseña</b></label>
                    <input type="password" class="form-control" @bind="model.Password">
                </div>
                <div class="btn-group">
                    <button type="button" class="btn btn-primary" @onclick="IniciarSesion">Iniciar sesión</button>
                    <button type="button" class="btn btn-secondary" @onclick="CrearUsuario">Crear Usuario</button>
                </div>
            </form>
        </div>
    </div>
    <br>
    <br>
    <br>
    <br>
    <br>
    @if (!string.IsNullOrEmpty(mensajeError))
    {
        <div class="alert alert-danger mt-3" role="alert">
            @mensajeError
        </div>
    }
</div>

@code 
{
    private string mensajeError = "";
    private LoginModel model = new LoginModel();

    private class LoginModel
    {
        public string UserName { get; set; }
        public string Password { get; set; }
    }

    
    void CrearUsuario()
    {
        urlHelper.NavigateTo("/usuario/crear");
    }

    private async Task IniciarSesion()
{
    if (string.IsNullOrWhiteSpace(model.UserName) || string.IsNullOrWhiteSpace(model.Password))
    {
        mensajeError = "Pero Papá, Complete Los Campos 😒❌";
    }
    else
    {
        var resultado = await userServices.Login(model.UserName, model.Password);
        if (resultado.Exitoso)
        {
            // Login exitoso, redirige a una página protegida (e.g., /animal)
            urlHelper.NavigateTo("/animal");
        }
        else
        {
            mensajeError = "Calanco, Las Credenciales Son Incorrectas 😒❌";
        }
    }
}


}
