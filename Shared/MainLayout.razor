@using System.Security.Claims
@using TORO.Authentication;
@inject AuthenticationStateProvider authStateProvider
@inherits LayoutComponentBase

<PageTitle>TORO</PageTitle>

<div class="page">
    <div class="sidebar d-print-none" >
        <NavMenu />
    </div>

    <main>
        <div class="top-row px-4 d-print-none" style="background-color: #0E2262;">
            <AuthorizeView>
                <Authorized>
                    <a class="nav-link active" style="color: white;">
                        @context.User.FindFirstValue(ClaimTypes.GivenName)
                    </a>
                </Authorized>
            </AuthorizeView>
            <a href="about" style="color: white;">About</a>
            
            <AuthorizeView>
            <Authorized>
                <a class="nav-link active" href="javascript:void(0)" style="color: white;" @onclick="Logout">
                    <img src="cerrar-sesion.png" style="height: 20px; width: 20px; ">
                    <span aria-hidden="true"></span> LogOut
                </a>
            </Authorized>
            <NotAuthorized>
                <a class="nav-link active" href="login" style="color: white;">
                    LogIn
                </a>
            </NotAuthorized>
          </AuthorizeView>
        </div>
        <article class="content px-4">
            @Body
        </article>
    </main>
</div>

@code
{
    private async Task Logout()
    {
        var customAuthStateProvider = (CustomAuthenticationStateProvider)authStateProvider;
        await customAuthStateProvider.UpdateAuthenticationState(null);
        urlHelper.NavigateTo("/", true);
    }
    private async Task LogIn()
    {
        urlHelper.NavigateTo("/login", true);
    }
}